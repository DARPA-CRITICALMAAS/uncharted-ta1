version: '3'
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - lara
    restart: on-failure
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5

  cdr:
    image: uncharted/lara-cdr:{{ tag }}
    command: ["--mode", "host", "--workdir", "/workdir", "--imagedir", "/imagedir", "--host", "rabbitmq"]
    ports:
      - 5000:5000
    environment:
      - CDR_API_TOKEN={{ cdr_api_token }}
      - NGROK_AUTHTOKEN={{ ngrok_authtoken }}
    volumes:
      - {{ cdr_workdir }}:/workdir
      - {{ image_dir }}:/imagedir
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - lara
    restart: on-failure

  geo_referencing:
    image: uncharted/lara-georef:{{ tag }}
    command: ["--workdir", "/workdir", "--imagedir", "/imagedir", "--rabbit_host", "rabbitmq", "--model", "pipelines/segmentation_weights/layoutlmv3_xsection_20231201", "--result_queue", "lara_result_queue"]
    environment:
      - OPENAI_API_KEY={{ openai_api_key }}
      - GOOGLE_APPLICATION_CREDENTIALS=/credentials.json
    volumes:
      - {{ google_application_credentials }}:/credentials.json
      - {{ georef_workdir }}:/workdir
      - {{ image_dir }}:/imagedir
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - lara
    restart: on-failure

  point_extraction:
    image: uncharted/lara-point-extract:{{ tag }}
    command: [
      "--workdir", "/workdir", "--imagedir", "/imagedir", "--rabbit_host", "rabbitmq","--model_point_extractor", "pipelines/point_extraction_weights/lara_yolo_20240406_best.pt", "--model_segmenter", "pipelines/segmentation_weights/layoutlmv3_xsection_20231201", "--result_queue", "lara_result_queue"]
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/credentials.json
    volumes:
      - {{ google_application_credentials }}:/credentials.json
      - {{ point_extract_workdir }}:/workdir
      - {{ image_dir }}:/imagedir
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - lara
    restart:  on-failure

  segmentation:
    image: uncharted/lara-segmentation:{{ tag }}
    command: [
      "--workdir", "/workdir", "--imagedir", "/imagedir", "--rabbit_host", "rabbitmq", "--model", "pipelines/segmentation_weights/layoutlmv3_xsection_20231201", "--result_queue", "lara_result_queue"]
    volumes:
      - {{ segmentation_workdir }}:/workdir
      - {{ image_dir }}:/imagedir
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - lara
    restart:  on-failure


networks:
  lara:
    name: lara
    driver: bridge
